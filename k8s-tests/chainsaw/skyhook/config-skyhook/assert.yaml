apiVersion: v1
kind: Node
metadata:
  labels:
    skyhook.nvidia.com/test-node: skyhooke2e
    skyhook.nvidia.com/status_config-skyhook: in_progress
  annotations:
    ("skyhook.nvidia.com/nodeState_config-skyhook" && parse_json("skyhook.nvidia.com/nodeState_config-skyhook")): 
      {
        "baxter|3.2.1": {
            "name": "baxter",
            "version": "3.2.1",
            "image": "ghcr.io/nvidia/skyhook/agentless",
            "stage": "apply",
            "state": "in_progress"
        },
        "dexter|1.2.3": {
            "name": "dexter",
            "version": "1.2.3",
            "image": "ghcr.io/nvidia/skyhook/agentless",
            "stage": "apply",
            "state": "in_progress"
        },
        "spencer|3.2.3": {
            "name": "spencer",
            "version": "3.2.3",
            "image": "ghcr.io/nvidia/skyhook/agentless",
            "stage": "apply",
            "state": "in_progress"
        }
      }
    skyhook.nvidia.com/status_config-skyhook: in_progress
status:
  (conditions[?type == 'skyhook.nvidia.com/config-skyhook/NotReady']):
  - reason: "Incomplete"
    status: "True"
  (conditions[?type == 'skyhook.nvidia.com/config-skyhook/Erroring']):
  - reason: "Not Erroring"
    status: "False"
---
apiVersion: skyhook.nvidia.com/v1alpha1
kind: Skyhook
metadata:
  name: config-skyhook
status:
  status: in_progress
  nodeState:
    (values(@)):
      - dexter|1.2.3:
          name: dexter
          state: in_progress
          version: '1.2.3'
          stage: apply
          image: ghcr.io/nvidia/skyhook/agentless
        baxter|3.2.1:
          name: baxter
          state: in_progress
          version: '3.2.1'
          stage: apply
          image: ghcr.io/nvidia/skyhook/agentless
        spencer|3.2.3:
          name: spencer
          state: in_progress
          version: '3.2.3'
          stage: apply
          image: ghcr.io/nvidia/skyhook/agentless
  nodeStatus:
   # grab values should be one and is complete
    (values(@)):
      - in_progress
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: config-skyhook-dexter-1.2.3
  namespace: skyhook
  labels:
    skyhook.nvidia.com/name: config-skyhook
  ownerReferences:
  - apiVersion: skyhook.nvidia.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Skyhook
    name: config-skyhook
data:
  game.properties: |
    enemies=aliens
    lives=3
    enemies.cheat=true
    enemies.cheat.level=noGoodRotten
  ui.properties: |
    color.good=purple
    color.bad=yellow
    allow.textmode=true
    how.nice.to.look=fairlyNice
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: config-skyhook-baxter-3.2.1
  namespace: skyhook
  labels:
    skyhook.nvidia.com/name: config-skyhook
  ownerReferences:
  - apiVersion: skyhook.nvidia.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Skyhook
    name: config-skyhook
data:
  game.properties: |
    enemies=aliens
    lives=3
    enemies.cheat=true
    enemies.cheat.level=noGoodRotten
  ui.properties: |
    color.good=purple
    color.bad=yellow
    allow.textmode=true
    how.nice.to.look=fairlyNice
---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: skyhook
  labels:
    skyhook.nvidia.com/skyhook-node-meta: config-skyhook
  ownerReferences:
  - apiVersion: skyhook.nvidia.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Skyhook
    name: config-skyhook
data:
  (length(@)): 2
  labels.json:
    (contains(@, 'skyhook.nvidia.com/test-node')): true
    (contains(@, 'skyhook.nvidia.com/status_config-skyhook')): true
  annotations.json:
    (contains(@, 'skyhook.nvidia.com/status_config-skyhook')): true
    (contains(@, 'skyhook.nvidia.com/nodeState_config-skyhook')): true