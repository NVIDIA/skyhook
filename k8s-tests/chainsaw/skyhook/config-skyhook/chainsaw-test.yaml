# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: config-skyhook
spec:
  description: This test validates that configuration changes are working for the operator. It asserts this by first making sure that a simple skyhook definition works as 
    expected and starts applying packages. It then immediately updates two packages before the SCR finishes, one with a package interrupt and another without, on a configmap 
    key which has a config interrupt defined and asserts that the specified config interrupts are merged and run for both of those packages. This first change also tests a
    case where if a config change with a config interrupt happens on a package with no package interrupt while other packages are running the interrupts will be merged and ran
    accordingly but the package with the config changes may be skipeed and hang, and this asserts that it doesn't hang in that condition. Then once that completes the same two
    packages have the key with a config interrupt changed and it's asserted that the config, interrupt, and post-interrupt runs for both those packages. Then once that completes 
    again it does one more update on a key for the same two packages which doesn't have a config interrupt defined and makes sure that the config steps are ran for that.
  timeouts:
    assert: 360s
  catch: ## if errors, print the most important info
    - get:
        apiVersion: v1
        kind: Node
        selector: skyhook.nvidia.com/test-node=skyhooke2e
        format: yaml
    - get:
        apiVersion: skyhook.nvidia.com/v1alpha1
        kind: Skyhook
        name: config-skyhook
        format: yaml
  steps:
  - try:
    - script:
        content: |
          ## remove annotation/labels from last run
          ../rest_test.sh config-skyhook
    - create:
        file: skyhook.yaml
    - assert:
        file: assert.yaml
  - try:
    - apply:
        file: update-while-running.yaml
    - assert:
        file: assert-update-while-running.yaml
  - try:
    - apply:
        file: update.yaml
    - assert:
        file: assert-update.yaml
  - try:
    - apply:
        file: update-no-interrupt.yaml
    - assert:
        file: assert-update-no-interrupt.yaml
  - try:
    - apply:
        file: update-glob.yaml
    - assert:
        file: assert-update-glob.yaml
