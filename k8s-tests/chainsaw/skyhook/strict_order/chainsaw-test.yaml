# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: strict-order-skyhook
spec:
  timeouts:
    assert: 60s
    exec: 90s
  catch: ## if errors, print the most important info
  - get:
      apiVersion: v1
      kind: Node
      selector: skyhook.nvidia.com/test-node=skyhooke2e
      format: yaml
  steps:
  - try:
    - script:
        content: |
          ## remove annotation/labels from last run
          ../rest_test.sh strict-order-skyhook-zzz
          ../rest_test.sh strict-order-skyhook-b
          ../rest_test.sh strict-order-skyhook-c
          ../rest_test.sh strict-order-skyhook-d
    - apply:
        file: skyhook.yaml
    - script:
        content: |
          ../metrics_test.py skyhook_disabled_count 1 -t skyhook_name=strict-order-skyhook-d
          ../metrics_test.py skyhook_paused_count 1 -t skyhook_name=strict-order-skyhook-b
          ../metrics_test.py skyhook_node_in_progress_count 1 -t skyhook_name=strict-order-skyhook-zzz
    - assert:
        file: assert-a.yaml
    - script:
        content: |
          ../metrics_test.py skyhook_node_in_progress_count 0 -t skyhook_name=strict-order-skyhook-zzz
          ../metrics_test.py skyhook_node_complete_count 1 -t skyhook_name=strict-order-skyhook-zzz
          ../metrics_test.py skyhook_package_complete_count 1 -t package_name=foobar -t package_version=1.2 -t skyhook_name=strict-order-skyhook-zzz
          ../metrics_test.py skyhook_package_stage_count 1 -t package_name=foobar -t package_version=1.2 -t skyhook_name=strict-order-skyhook-zzz -t stage=config
    # make sure that if it was going to start b it will start b
    - sleep:
        duration: 5s
    - assert:
        file: assert-a.yaml
  - try:
    - patch:
        file: skyhook-pause-update.yaml
    - assert:
        file: assert-b.yaml
    - script:
        content: |
          ../metrics_test.py skyhook_node_in_progress_count 1 -t skyhook_name=strict-order-skyhook-c
          ../metrics_test.py skyhook_node_complete_count 1 -t skyhook_name=strict-order-skyhook-b
          ../metrics_test.py skyhook_disabled_count 1 -t skyhook_name=strict-order-skyhook-d
          ../metrics_test.py skyhook_paused_count 0 -t skyhook_name=strict-order-skyhook-b
    - assert:
        file: assert-c.yaml
    - assert:
        file: assert-d.yaml
    # make sure that if it was going to start d it will start d
    - sleep:
        duration: 5s
    - assert:
        file: assert-d.yaml
  - try:
    - patch:
        ## this test is very odd, it adds stuff... not makes it so
        file: skyhook-disable-update.yaml
    - script:
        content: |
          ../metrics_test.py skyhook_node_in_progress_count 1 -t skyhook_name=strict-order-skyhook-d
          ../metrics_test.py skyhook_disabled_count 0 -t skyhook_name=strict-order-skyhook-d
    - assert:
        file: assert-e.yaml
