# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: Pod
apiVersion: v1
metadata:
  namespace: skyhook
  labels:
    skyhook.nvidia.com/name: interrupt-grouping
    skyhook.nvidia.com/package: dax-1.2.3
  annotations:
    skyhook.nvidia.com/package: >-
      {"name":"dax","version":"1.2.3","skyhook":"interrupt-grouping","stage":"apply","image":"ghcr.io/nvidia/skyhook/agentless"}
  ownerReferences:
    - apiVersion: skyhook.nvidia.com/v1alpha1
      kind: Skyhook
      name: interrupt-grouping
spec:
  initContainers:
    - name: dax-init
      image: ghcr.io/nvidia/skyhook/agentless:1.2.3
    - name: dax-apply
      image: ghcr.io/nvidia/skyhook/agentless:6.2.0
      args:
        ([0]): apply
        ([1]): /root
        (length(@)): 3
    - name: dax-applycheck
      image: ghcr.io/nvidia/skyhook/agentless:6.2.0
      args:
        ([0]): apply-check
        ([1]): /root
        (length(@)): 3
  (tolerations[?key == 'nvidia.com/gpu']):
    - operator: Exists
---
kind: Pod
apiVersion: v1
metadata:
  namespace: skyhook
  labels:
    skyhook.nvidia.com/name: interrupt-grouping
    skyhook.nvidia.com/package: dax-1.2.3
  annotations:
    skyhook.nvidia.com/package: >-
      {"name":"dax","version":"1.2.3","skyhook":"interrupt-grouping","stage":"config","image":"ghcr.io/nvidia/skyhook/agentless"}
  ownerReferences:
    - apiVersion: skyhook.nvidia.com/v1alpha1
      kind: Skyhook
      name: interrupt-grouping
spec:
  initContainers:
    - name: dax-init
    - name: dax-config
      args:
        ([0]): config 
        ([1]): /root
        (length(@)): 3
    - name: dax-configcheck
      args:
        ([0]): config-check
        ([1]): /root
        (length(@)): 3
  (tolerations[?key == 'nvidia.com/gpu']):
    - operator: Exists
---
kind: Pod
apiVersion: v1
metadata:
  namespace: skyhook
  labels:
    skyhook.nvidia.com/name: interrupt-grouping
    skyhook.nvidia.com/package: dax-1.2.3
  annotations:
   ("skyhook.nvidia.com/package" && parse_json("skyhook.nvidia.com/package")):
      {
        "name": "dax",
        "version": "1.2.3",
        "skyhook": "interrupt-grouping",
        "stage": "interrupt",
        "image": "ghcr.io/nvidia/skyhook/agentless"
      }
  ownerReferences:
    - apiVersion: skyhook.nvidia.com/v1alpha1
      kind: Skyhook
      name: interrupt-grouping
spec:
  initContainers:
    - name: interrupt
      args:
        ([0]): interrupt
        ([1]): /root
        (parse_json(base64_decode([3]))): 
          {
              "type": "service_restart",
              "services": [
                  "containerd",
                  "cron",
                  "foobar"
              ]
          }
        (length(@)): 4
  (tolerations[?key == 'nvidia.com/gpu']):
    - operator: Exists
---
kind: Pod
apiVersion: v1
metadata:
  namespace: skyhook
  labels:
    skyhook.nvidia.com/name: interrupt-grouping
    skyhook.nvidia.com/package: dax-1.2.3
  annotations:
    skyhook.nvidia.com/package: >-
      {"name":"dax","version":"1.2.3","skyhook":"interrupt-grouping","stage":"post-interrupt","image":"ghcr.io/nvidia/skyhook/agentless"}
  ownerReferences:
    - apiVersion: skyhook.nvidia.com/v1alpha1
      kind: Skyhook
      name: interrupt-grouping
spec:
  initContainers:
    - name: dax-init
    - name: dax-post-interrupt
      args:
        ([0]): post-interrupt
        ([1]): /root
        (length(@)): 3
    - name: dax-post-interruptcheck
      args:
        ([0]): post-interrupt-check
        ([1]): /root
        (length(@)): 3
  (tolerations[?key == 'nvidia.com/gpu']):
    - operator: Exists
---
kind: Node
apiVersion: v1
metadata:
  labels:
    skyhook.nvidia.com/test-node: skyhooke2e
    skyhook.nvidia.com/status_interrupt-grouping: complete
  annotations:
    (length("skyhook.nvidia.com/version_interrupt-grouping") >= `6`): true
    skyhook.nvidia.com/nodeState_interrupt-grouping: >-
      {"dax|1.2.3":{"name":"dax","version":"1.2.3","image":"ghcr.io/nvidia/skyhook/agentless","stage":"post-interrupt","state":"complete"},"zeb|2.1.4":{"name":"zeb","version":"2.1.4","image":"ghcr.io/nvidia/skyhook/agentless","stage":"post-interrupt","state":"complete"}}
    skyhook.nvidia.com/status_interrupt-grouping: complete
  (!taints || length(taints)==`0` || (taints && !not_null(taints))): true ## taints should be empty or not exist
status:
  (conditions[?type == 'skyhook.nvidia.com/interrupt-grouping/NotReady']):
  - reason: "Complete"
    status: "False"
  (conditions[?type == 'skyhook.nvidia.com/interrupt-grouping/Erroring']):
  - reason: "Not Erroring"
    status: "False"
---
kind: Skyhook
apiVersion: skyhook.nvidia.com/v1alpha1
metadata:
  name: interrupt-grouping
  annotations:
    ## test that version info is present
    ## the quotes are to escape the . and / in the key
    (length("skyhook.nvidia.com/version") >= `6`): true
status:
  status: complete
  (to_number(observedGeneration) == `2` || to_number(observedGeneration) == `3`): true ## migrate seems to add 1, but not in all cases it seems
  nodeState:
    (values(@)):
      - dax|1.2.3:
          name: dax
          stage: post-interrupt
          state: complete
          version: 1.2.3
          image: ghcr.io/nvidia/skyhook/agentless
        zeb|2.1.4:
          name: zeb
          stage: post-interrupt
          state: complete
          version: 2.1.4
          image: ghcr.io/nvidia/skyhook/agentless
  nodeStatus:
   # grab values should be one and is complete
    (values(@)):
      - complete
---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: skyhook
  labels:
    skyhook.nvidia.com/skyhook-node-meta: interrupt-grouping
  ownerReferences:
  - apiVersion: skyhook.nvidia.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: Skyhook
    name: interrupt-grouping
data:
  (length(@)): 2
  labels.json:
    (contains(@, 'skyhook.nvidia.com/test-node')): true
    (contains(@, 'skyhook.nvidia.com/status_interrupt-grouping')): true
  annotations.json:
    (contains(@, 'skyhook.nvidia.com/status_interrupt-grouping')): true
    (contains(@, 'skyhook.nvidia.com/nodeState_interrupt-grouping')): true
