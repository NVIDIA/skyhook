apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: skyhooks.skyhook.nvidia.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: skyhook-operator-webhook-service
          namespace: '{{ .Release.Namespace }}'
          path: /convert
      conversionReviewVersions:
      - v1
  group: skyhook.nvidia.com
  names:
    kind: Skyhook
    listKind: SkyhookList
    plural: skyhooks
    singular: skyhook
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.nodesInProgress
      name: Nodes In-Progress
      type: integer
    - jsonPath: .status.completeNodes
      name: Complete Nodes
      type: string
    - jsonPath: .status.packageList
      name: Packages
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Skyhook is the Schema for the skyhooks API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SkyhookSpec defines the desired state of Skyhook
            properties:
              additionalTolerations:
                description: AdditionalTolerations adds tolerations to all packages
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              deploymentPolicy:
                description: DeploymentPolicy is the name of a DeploymentPolicy for
                  rollout settings
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              interruptionBudget:
                description: InterruptionBudget configures how many nodes that match
                  node selectors that allowed to be interrupted at once.
                properties:
                  count:
                    description: |-
                      Count is number of nodes that match node selectors that allowed to be interrupted at once.
                      Percent and count are mutually exclusive settings
                    minimum: 0
                    nullable: true
                    type: integer
                  percent:
                    description: |-
                      Percent of nodes that match node selectors that allowed to be interrupted at once.
                      Percent and count are mutually exclusive settings
                    maximum: 100
                    minimum: 0
                    nullable: true
                    type: integer
                type: object
              nodeSelectors:
                description: NodeSelector are a set of labels we want to monitor nodes
                  for applying packages too
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              packages:
                additionalProperties:
                  description: Package is a container that contains the skyhook agent
                    plus some work to do, plus any dependencies to be run first.
                  properties:
                    agentImageOverride:
                      description: |-
                        Agent Image Override is the container image to override at the package level. Full qualified image with tag.
                        This overrides the image provided via ENV to the operator.
                      example: alpine:3.21.0
                      type: string
                    configInterrupts:
                      additionalProperties:
                        properties:
                          services:
                            description: List of systemd services to restart
                            items:
                              type: string
                            type: array
                          type:
                            description: Type of interrupt. Reboot, Service, All Services,
                              or Noop
                            enum:
                            - service
                            - reboot
                            - noop
                            - restartAllServices
                            type: string
                        required:
                        - type
                        type: object
                      description: ConfigInterrupts is a map for whether an interrupt
                        is needed for a configmap key
                      type: object
                    configMap:
                      additionalProperties:
                        type: string
                      description: |-
                        ConfigMap contains the configuration data.
                        Each key must consist of alphanumeric characters, '-', '_' or '.'.
                        Values must be UTF-8 byte sequences.
                        The keys stored in Data must not overlap with the keys in
                        the BinaryData field, this is enforced during validation process.
                      type: object
                    dependsOn:
                      additionalProperties:
                        type: string
                      description: |-
                        DependsOn is a map of name:version of dependencies.
                        NOTE: we need to deal with version
                      type: object
                    env:
                      description: Env are the environment variables for the package
                      items:
                        description: EnvVar represents an environment variable present
                          in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be a
                              C_IDENTIFIER.
                            type: string
                          value:
                            description: |-
                              Variable references $(VAR_NAME) are expanded
                              using the previously defined environment variables in the container and
                              any service environment variables. If a variable cannot be resolved,
                              the reference in the input string will be unchanged. Double $$ are reduced
                              to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                              "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                              Escaped references will never be expanded, regardless of whether the variable
                              exists or not.
                              Defaults to "".
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value.
                              Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: |-
                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key
                                      must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    gracefulShutdown:
                      description: GracefulShutdown is the graceful shutdown timeout
                        for the package, if not set, uses k8s default
                      type: string
                    image:
                      description: Image is the container image to run. Do not included
                        the tag, that is set in the version.
                      example: alpine
                      type: string
                    interrupt:
                      description: Interrupt if supplied is the type of interrupt
                      properties:
                        services:
                          description: List of systemd services to restart
                          items:
                            type: string
                          type: array
                        type:
                          description: Type of interrupt. Reboot, Service, All Services,
                            or Noop
                          enum:
                          - service
                          - reboot
                          - noop
                          - restartAllServices
                          type: string
                      required:
                      - type
                      type: object
                    name:
                      description: Name of the package. Do not set unless you know what
                        your doing. Comes from map key.
                      maxLength: 43
                      pattern: ^[a-z][-a-z0-9]{0,41}[a-z]$
                      type: string
                    resources:
                      description: |-
                        Resources lets you set the cpu and memory limits and requests for this package.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      properties:
                        cpuLimit:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        cpuRequest:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        memoryLimit:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        memoryRequest:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                      type: object
                    version:
                      description: Version is the version of the package
                      type: string
                  required:
                  - image
                  - version
                  type: object
                description: Packages are the DAG of packages to be applied to nodes.
                type: object
              podNonInterruptLabels:
                description: PodNonInterruptLabels are a set of labels we want to
                  monitor pods for whether they Interruptible
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              runtimeRequired:
                default: false
                description: This skyhook is required to have been completed before
                  any workloads can start
                type: boolean
              priority:
                description: Priority determines the order in which skyhooks are applied. Lower values are applied first.
                type: integer
                minimum: 1
                default: 200
              serial:
                default: false
                description: Serial tells skyhook if it allowed to run in parallel or
                  not when applying packages
                type: boolean
            type: object
          status:
            description: SkyhookStatus defines the observed state of Skyhook
            properties:
              compartmentBatchStates:
                additionalProperties:
                  description: BatchProcessingState tracks the current state of batch
                    processing for a compartment
                  properties:
                    consecutiveFailures:
                      description: Number of consecutive failures
                      type: integer
                    currentBatch:
                      description: Current batch number (starts at 1)
                      type: integer
                    currentBatchNodes:
                      description: Names of nodes in the current batch (persisted
                        across reconciles)
                      items:
                        type: string
                      type: array
                    failedInBatch:
                      description: Number of failed nodes in current batch
                      type: integer
                    lastBatchFailed:
                      description: Whether the last batch failed (for slowdown logic)
                      type: boolean
                    lastBatchSize:
                      description: Last successful batch size (for slowdown calculations)
                      type: integer
                    processedNodes:
                      description: Total number of nodes processed so far
                      type: integer
                    shouldStop:
                      description: Whether the strategy should stop processing due
                        to failures
                      type: boolean
                    successfulInBatch:
                      description: Number of successful nodes in current batch
                      type: integer
                  type: object
                description: CompartmentBatchStates tracks batch processing state
                  per compartment
                type: object
              completeNodes:
                default: 0/0
                description: |-
                  CompleteNodes is a string that displays the amount of nodes that are complete
                  out of the total nodes the skyhook is being applied to and is only used for
                  a printer column.
                example: 3/5
                type: string
              conditions:
                description: |-
                  Represents the observations of a skyhook's current state.
                  Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // TODO
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              configUpdates:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: ConfigUpdates tracks config updates
                type: object
              nodeBootIds:
                additionalProperties:
                  type: string
                description: NodeBootIds tracks the boot ids of nodes for triggering
                  on reboot
                type: object
              nodePriority:
                additionalProperties:
                  format: date-time
                  type: string
                description: NodePriority tracks what nodes we are working on. This
                  is makes the interrupts budgets sticky.
                type: object
              nodeState:
                additionalProperties:
                  additionalProperties:
                    properties:
                      image:
                        description: Image for the package
                        type: string
                      name:
                        description: Name is the name of the package
                        type: string
                      restarts:
                        description: Restarts are the number of times a package restarted
                        format: int32
                        type: integer
                      stage:
                        description: |-
                          Stage is where in the package install process is currently for a node.
                          these stages encapsulate checks. Both Apply and PostInterrupt also run checks,
                          these are all or nothing, meaning both need to be successful in order to transition
                        enum:
                        - apply
                        - interrupt
                        - post-interrupt
                        - config
                        - uninstall
                        - upgrade
                        type: string
                      state:
                        description: State is the current state of this package
                        enum:
                        - complete
                        - in_progress
                        - skipped
                        - erroring
                        - unknown
                        type: string
                      version:
                        description: Version is the version of the package
                        type: string
                    required:
                    - image
                    - name
                    - stage
                    - state
                    - version
                    type: object
                  type: object
                description: NodeState is the detailed state of each node
                type: object
              nodeStatus:
                additionalProperties:
                  type: string
                description: NodeStatus tracks by node the status of the node
                type: object
              nodesInProgress:
                default: 0
                description: |-
                  NodesInProgress displays the number of nodes that are currently in progress and is
                  only used for printer columns.
                example: 3
                type: integer
              observedGeneration:
                description: |-
                  observedGeneration represents the .metadata.generation that the condition was set based upon.
                  For instance, if .metadata.generation is currently 12, but the .status.observedGeneration is 9, then status is out of date
                format: int64
                minimum: 0
                type: integer
              packageList:
                default: ""
                description: |-
                  PackageList is a comma separated list of package names from the skyhook spec and
                  is only used for a printer column.
                example: dexter,spencer,foobar
                type: string
              status:
                description: Status is the roll of this instance of skyhook and all
                  nodes status.
                enum:
                - unknown
                - complete
                - blocked
                - waiting
                - disabled
                - paused
                - in_progress
                - erroring
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}